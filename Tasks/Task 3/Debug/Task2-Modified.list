
Task2-Modified.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000005ac  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000740  08000748  00010748  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000740  08000740  00010748  2**0
                  CONTENTS
  4 .ARM          00000000  08000740  08000740  00010748  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000740  08000748  00010748  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000740  08000740  00010740  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000744  08000744  00010744  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010748  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000748  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000748  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010748  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000ccc  00000000  00000000  00010778  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000003a9  00000000  00000000  00011444  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000b0  00000000  00000000  000117f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000078  00000000  00000000  000118a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000e00d  00000000  00000000  00011918  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000113e  00000000  00000000  0001f925  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004fcde  00000000  00000000  00020a63  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00070741  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000188  00000000  00000000  00070794  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000728 	.word	0x08000728

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000728 	.word	0x08000728

080001d4 <main>:

void delay(int secs);
void color_mix(int color);

int main()
{
 80001d4:	b580      	push	{r7, lr}
 80001d6:	b086      	sub	sp, #24
 80001d8:	af02      	add	r7, sp, #8
    int i;

    // Configure PB5->PB7 pins of as digital output pins
    for (i = 5; i <= 7; i++)
 80001da:	2305      	movs	r3, #5
 80001dc:	60fb      	str	r3, [r7, #12]
 80001de:	e00a      	b.n	80001f6 <main+0x22>
    {
        GPIO_Init('B', i, OUTPUT, PUSH_PULL, NO_STATE);
 80001e0:	68f9      	ldr	r1, [r7, #12]
 80001e2:	2300      	movs	r3, #0
 80001e4:	9300      	str	r3, [sp, #0]
 80001e6:	2300      	movs	r3, #0
 80001e8:	2201      	movs	r2, #1
 80001ea:	2042      	movs	r0, #66	; 0x42
 80001ec:	f000 f896 	bl	800031c <GPIO_Init>
    for (i = 5; i <= 7; i++)
 80001f0:	68fb      	ldr	r3, [r7, #12]
 80001f2:	3301      	adds	r3, #1
 80001f4:	60fb      	str	r3, [r7, #12]
 80001f6:	68fb      	ldr	r3, [r7, #12]
 80001f8:	2b07      	cmp	r3, #7
 80001fa:	ddf1      	ble.n	80001e0 <main+0xc>
    }

    /* Configure PB3 as a digital input pin */
    GPIO_Init('B', 3, INPUT, PUSH_PULL, PULL_UP);
 80001fc:	2301      	movs	r3, #1
 80001fe:	9300      	str	r3, [sp, #0]
 8000200:	2300      	movs	r3, #0
 8000202:	2200      	movs	r2, #0
 8000204:	2103      	movs	r1, #3
 8000206:	2042      	movs	r0, #66	; 0x42
 8000208:	f000 f888 	bl	800031c <GPIO_Init>

    int color = 1;
 800020c:	2301      	movs	r3, #1
 800020e:	60bb      	str	r3, [r7, #8]
    // initial state for the LED: TURN ALL ON
    while (1)

    {
        char state = GPIO_ReadPin('B', 3);
 8000210:	2103      	movs	r1, #3
 8000212:	2042      	movs	r0, #66	; 0x42
 8000214:	f000 fa34 	bl	8000680 <GPIO_ReadPin>
 8000218:	4603      	mov	r3, r0
 800021a:	71fb      	strb	r3, [r7, #7]
        delay(1000);
 800021c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000220:	f000 f819 	bl	8000256 <delay>

        // Check current state of the button to change the color if it's pressed.
        if (state && !GPIO_ReadPin('B', 3))
 8000224:	79fb      	ldrb	r3, [r7, #7]
 8000226:	2b00      	cmp	r3, #0
 8000228:	d0f2      	beq.n	8000210 <main+0x3c>
 800022a:	2103      	movs	r1, #3
 800022c:	2042      	movs	r0, #66	; 0x42
 800022e:	f000 fa27 	bl	8000680 <GPIO_ReadPin>
 8000232:	4603      	mov	r3, r0
 8000234:	2b00      	cmp	r3, #0
 8000236:	d1eb      	bne.n	8000210 <main+0x3c>
        {
            color_mix((color) % 8);
 8000238:	68bb      	ldr	r3, [r7, #8]
 800023a:	425a      	negs	r2, r3
 800023c:	f003 0307 	and.w	r3, r3, #7
 8000240:	f002 0207 	and.w	r2, r2, #7
 8000244:	bf58      	it	pl
 8000246:	4253      	negpl	r3, r2
 8000248:	4618      	mov	r0, r3
 800024a:	f000 f815 	bl	8000278 <color_mix>
            color++;
 800024e:	68bb      	ldr	r3, [r7, #8]
 8000250:	3301      	adds	r3, #1
 8000252:	60bb      	str	r3, [r7, #8]
    {
 8000254:	e7dc      	b.n	8000210 <main+0x3c>

08000256 <delay>:
    }
    return 0;
}

void delay(int time)
{
 8000256:	b480      	push	{r7}
 8000258:	b083      	sub	sp, #12
 800025a:	af00      	add	r7, sp, #0
 800025c:	6078      	str	r0, [r7, #4]
    while (time--)
 800025e:	bf00      	nop
 8000260:	687b      	ldr	r3, [r7, #4]
 8000262:	1e5a      	subs	r2, r3, #1
 8000264:	607a      	str	r2, [r7, #4]
 8000266:	2b00      	cmp	r3, #0
 8000268:	d1fa      	bne.n	8000260 <delay+0xa>
    {
    }
}
 800026a:	bf00      	nop
 800026c:	bf00      	nop
 800026e:	370c      	adds	r7, #12
 8000270:	46bd      	mov	sp, r7
 8000272:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000276:	4770      	bx	lr

08000278 <color_mix>:
void color_mix(int color)
{
 8000278:	b580      	push	{r7, lr}
 800027a:	b082      	sub	sp, #8
 800027c:	af00      	add	r7, sp, #0
 800027e:	6078      	str	r0, [r7, #4]
    // Reset(clear) all pins
    GPIOB_ODR &= ~(7 << 5);
 8000280:	4b07      	ldr	r3, [pc, #28]	; (80002a0 <color_mix+0x28>)
 8000282:	695b      	ldr	r3, [r3, #20]
 8000284:	4a06      	ldr	r2, [pc, #24]	; (80002a0 <color_mix+0x28>)
 8000286:	f023 03e0 	bic.w	r3, r3, #224	; 0xe0
 800028a:	6153      	str	r3, [r2, #20]

    // Set to new color
    GPIO_WritePin('B', 5, color);
 800028c:	687b      	ldr	r3, [r7, #4]
 800028e:	461a      	mov	r2, r3
 8000290:	2105      	movs	r1, #5
 8000292:	2042      	movs	r0, #66	; 0x42
 8000294:	f000 f984 	bl	80005a0 <GPIO_WritePin>
}
 8000298:	bf00      	nop
 800029a:	3708      	adds	r7, #8
 800029c:	46bd      	mov	sp, r7
 800029e:	bd80      	pop	{r7, pc}
 80002a0:	40020400 	.word	0x40020400

080002a4 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80002a4:	b480      	push	{r7}
 80002a6:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80002a8:	4b06      	ldr	r3, [pc, #24]	; (80002c4 <SystemInit+0x20>)
 80002aa:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80002ae:	4a05      	ldr	r2, [pc, #20]	; (80002c4 <SystemInit+0x20>)
 80002b0:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80002b4:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80002b8:	bf00      	nop
 80002ba:	46bd      	mov	sp, r7
 80002bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002c0:	4770      	bx	lr
 80002c2:	bf00      	nop
 80002c4:	e000ed00 	.word	0xe000ed00

080002c8 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 80002c8:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000300 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 80002cc:	480d      	ldr	r0, [pc, #52]	; (8000304 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 80002ce:	490e      	ldr	r1, [pc, #56]	; (8000308 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 80002d0:	4a0e      	ldr	r2, [pc, #56]	; (800030c <LoopFillZerobss+0x1e>)
  movs r3, #0
 80002d2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002d4:	e002      	b.n	80002dc <LoopCopyDataInit>

080002d6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002d6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002d8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002da:	3304      	adds	r3, #4

080002dc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002dc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002de:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002e0:	d3f9      	bcc.n	80002d6 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002e2:	4a0b      	ldr	r2, [pc, #44]	; (8000310 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 80002e4:	4c0b      	ldr	r4, [pc, #44]	; (8000314 <LoopFillZerobss+0x26>)
  movs r3, #0
 80002e6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002e8:	e001      	b.n	80002ee <LoopFillZerobss>

080002ea <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002ea:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002ec:	3204      	adds	r2, #4

080002ee <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ee:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002f0:	d3fb      	bcc.n	80002ea <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80002f2:	f7ff ffd7 	bl	80002a4 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80002f6:	f000 f9f3 	bl	80006e0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80002fa:	f7ff ff6b 	bl	80001d4 <main>
  bx  lr    
 80002fe:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8000300:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 8000304:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000308:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800030c:	08000748 	.word	0x08000748
  ldr r2, =_sbss
 8000310:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000314:	2000001c 	.word	0x2000001c

08000318 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000318:	e7fe      	b.n	8000318 <ADC_IRQHandler>
	...

0800031c <GPIO_Init>:
 */
#include "GPIO.h"
#include "stm32f401xc.h"
#include "stm32f401cc_interface.h"
void GPIO_Init(char Port, unsigned int PIN_NO, unsigned int PIN_Dir, unsigned int Default_State, unsigned int RES_State)
{
 800031c:	b480      	push	{r7}
 800031e:	b085      	sub	sp, #20
 8000320:	af00      	add	r7, sp, #0
 8000322:	60b9      	str	r1, [r7, #8]
 8000324:	607a      	str	r2, [r7, #4]
 8000326:	603b      	str	r3, [r7, #0]
 8000328:	4603      	mov	r3, r0
 800032a:	73fb      	strb	r3, [r7, #15]
    //enable clock of port
    switch (Port)
 800032c:	7bfb      	ldrb	r3, [r7, #15]
 800032e:	2b41      	cmp	r3, #65	; 0x41
 8000330:	d003      	beq.n	800033a <GPIO_Init+0x1e>
 8000332:	2b42      	cmp	r3, #66	; 0x42
 8000334:	f000 8097 	beq.w	8000466 <GPIO_Init+0x14a>
            GPIOB_PUPDR &= ~(0x01 << PIN_NO);
            break;
        } //end switch
        break;
    }
}
 8000338:	e125      	b.n	8000586 <GPIO_Init+0x26a>
        RCC_AHB1ENR |= (0x01 << 0);
 800033a:	4b96      	ldr	r3, [pc, #600]	; (8000594 <GPIO_Init+0x278>)
 800033c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800033e:	4a95      	ldr	r2, [pc, #596]	; (8000594 <GPIO_Init+0x278>)
 8000340:	f043 0301 	orr.w	r3, r3, #1
 8000344:	6313      	str	r3, [r2, #48]	; 0x30
 8000346:	687b      	ldr	r3, [r7, #4]
 8000348:	2b03      	cmp	r3, #3
 800034a:	d83c      	bhi.n	80003c6 <GPIO_Init+0xaa>
 800034c:	a201      	add	r2, pc, #4	; (adr r2, 8000354 <GPIO_Init+0x38>)
 800034e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000352:	bf00      	nop
 8000354:	08000365 	.word	0x08000365
 8000358:	0800037f 	.word	0x0800037f
 800035c:	08000397 	.word	0x08000397
 8000360:	080003af 	.word	0x080003af
            GPIOA_MODER &= ~(0x03 << 2 * PIN_NO);
 8000364:	4b8c      	ldr	r3, [pc, #560]	; (8000598 <GPIO_Init+0x27c>)
 8000366:	681b      	ldr	r3, [r3, #0]
 8000368:	68ba      	ldr	r2, [r7, #8]
 800036a:	0052      	lsls	r2, r2, #1
 800036c:	2103      	movs	r1, #3
 800036e:	fa01 f202 	lsl.w	r2, r1, r2
 8000372:	43d2      	mvns	r2, r2
 8000374:	4611      	mov	r1, r2
 8000376:	4a88      	ldr	r2, [pc, #544]	; (8000598 <GPIO_Init+0x27c>)
 8000378:	400b      	ands	r3, r1
 800037a:	6013      	str	r3, [r2, #0]
            break;
 800037c:	e023      	b.n	80003c6 <GPIO_Init+0xaa>
            GPIOA_MODER |= (0x01 << 2 * PIN_NO);
 800037e:	4b86      	ldr	r3, [pc, #536]	; (8000598 <GPIO_Init+0x27c>)
 8000380:	681b      	ldr	r3, [r3, #0]
 8000382:	68ba      	ldr	r2, [r7, #8]
 8000384:	0052      	lsls	r2, r2, #1
 8000386:	2101      	movs	r1, #1
 8000388:	fa01 f202 	lsl.w	r2, r1, r2
 800038c:	4611      	mov	r1, r2
 800038e:	4a82      	ldr	r2, [pc, #520]	; (8000598 <GPIO_Init+0x27c>)
 8000390:	430b      	orrs	r3, r1
 8000392:	6013      	str	r3, [r2, #0]
            break;
 8000394:	e017      	b.n	80003c6 <GPIO_Init+0xaa>
            GPIOA_MODER |= (0x02 << 2 * PIN_NO);
 8000396:	4b80      	ldr	r3, [pc, #512]	; (8000598 <GPIO_Init+0x27c>)
 8000398:	681b      	ldr	r3, [r3, #0]
 800039a:	68ba      	ldr	r2, [r7, #8]
 800039c:	0052      	lsls	r2, r2, #1
 800039e:	2102      	movs	r1, #2
 80003a0:	fa01 f202 	lsl.w	r2, r1, r2
 80003a4:	4611      	mov	r1, r2
 80003a6:	4a7c      	ldr	r2, [pc, #496]	; (8000598 <GPIO_Init+0x27c>)
 80003a8:	430b      	orrs	r3, r1
 80003aa:	6013      	str	r3, [r2, #0]
            break;
 80003ac:	e00b      	b.n	80003c6 <GPIO_Init+0xaa>
            GPIOA_MODER |= (0x03 << 2 * PIN_NO);
 80003ae:	4b7a      	ldr	r3, [pc, #488]	; (8000598 <GPIO_Init+0x27c>)
 80003b0:	681b      	ldr	r3, [r3, #0]
 80003b2:	68ba      	ldr	r2, [r7, #8]
 80003b4:	0052      	lsls	r2, r2, #1
 80003b6:	2103      	movs	r1, #3
 80003b8:	fa01 f202 	lsl.w	r2, r1, r2
 80003bc:	4611      	mov	r1, r2
 80003be:	4a76      	ldr	r2, [pc, #472]	; (8000598 <GPIO_Init+0x27c>)
 80003c0:	430b      	orrs	r3, r1
 80003c2:	6013      	str	r3, [r2, #0]
            break;
 80003c4:	bf00      	nop
 80003c6:	683b      	ldr	r3, [r7, #0]
 80003c8:	2b00      	cmp	r3, #0
 80003ca:	d003      	beq.n	80003d4 <GPIO_Init+0xb8>
 80003cc:	683b      	ldr	r3, [r7, #0]
 80003ce:	2b01      	cmp	r3, #1
 80003d0:	d00c      	beq.n	80003ec <GPIO_Init+0xd0>
            break;
 80003d2:	e016      	b.n	8000402 <GPIO_Init+0xe6>
            GPIOA_OTYPER &= ~(0x01 << PIN_NO);
 80003d4:	4b70      	ldr	r3, [pc, #448]	; (8000598 <GPIO_Init+0x27c>)
 80003d6:	685b      	ldr	r3, [r3, #4]
 80003d8:	2101      	movs	r1, #1
 80003da:	68ba      	ldr	r2, [r7, #8]
 80003dc:	fa01 f202 	lsl.w	r2, r1, r2
 80003e0:	43d2      	mvns	r2, r2
 80003e2:	4611      	mov	r1, r2
 80003e4:	4a6c      	ldr	r2, [pc, #432]	; (8000598 <GPIO_Init+0x27c>)
 80003e6:	400b      	ands	r3, r1
 80003e8:	6053      	str	r3, [r2, #4]
            break;
 80003ea:	e00a      	b.n	8000402 <GPIO_Init+0xe6>
            GPIOA_OTYPER |= (0x01 << PIN_NO);
 80003ec:	4b6a      	ldr	r3, [pc, #424]	; (8000598 <GPIO_Init+0x27c>)
 80003ee:	685b      	ldr	r3, [r3, #4]
 80003f0:	2101      	movs	r1, #1
 80003f2:	68ba      	ldr	r2, [r7, #8]
 80003f4:	fa01 f202 	lsl.w	r2, r1, r2
 80003f8:	4611      	mov	r1, r2
 80003fa:	4a67      	ldr	r2, [pc, #412]	; (8000598 <GPIO_Init+0x27c>)
 80003fc:	430b      	orrs	r3, r1
 80003fe:	6053      	str	r3, [r2, #4]
            break;
 8000400:	bf00      	nop
        switch (RES_State = 0)
 8000402:	2300      	movs	r3, #0
 8000404:	61bb      	str	r3, [r7, #24]
 8000406:	69bb      	ldr	r3, [r7, #24]
 8000408:	2b02      	cmp	r3, #2
 800040a:	d013      	beq.n	8000434 <GPIO_Init+0x118>
 800040c:	69bb      	ldr	r3, [r7, #24]
 800040e:	2b02      	cmp	r3, #2
 8000410:	d827      	bhi.n	8000462 <GPIO_Init+0x146>
 8000412:	69bb      	ldr	r3, [r7, #24]
 8000414:	2b00      	cmp	r3, #0
 8000416:	d018      	beq.n	800044a <GPIO_Init+0x12e>
 8000418:	69bb      	ldr	r3, [r7, #24]
 800041a:	2b01      	cmp	r3, #1
 800041c:	d121      	bne.n	8000462 <GPIO_Init+0x146>
            GPIOA_PUPDR |= (0x01 << PIN_NO);
 800041e:	4b5e      	ldr	r3, [pc, #376]	; (8000598 <GPIO_Init+0x27c>)
 8000420:	68db      	ldr	r3, [r3, #12]
 8000422:	2101      	movs	r1, #1
 8000424:	68ba      	ldr	r2, [r7, #8]
 8000426:	fa01 f202 	lsl.w	r2, r1, r2
 800042a:	4611      	mov	r1, r2
 800042c:	4a5a      	ldr	r2, [pc, #360]	; (8000598 <GPIO_Init+0x27c>)
 800042e:	430b      	orrs	r3, r1
 8000430:	60d3      	str	r3, [r2, #12]
            break;
 8000432:	e017      	b.n	8000464 <GPIO_Init+0x148>
            GPIOA_PUPDR |= (0x02 << PIN_NO);
 8000434:	4b58      	ldr	r3, [pc, #352]	; (8000598 <GPIO_Init+0x27c>)
 8000436:	68db      	ldr	r3, [r3, #12]
 8000438:	2102      	movs	r1, #2
 800043a:	68ba      	ldr	r2, [r7, #8]
 800043c:	fa01 f202 	lsl.w	r2, r1, r2
 8000440:	4611      	mov	r1, r2
 8000442:	4a55      	ldr	r2, [pc, #340]	; (8000598 <GPIO_Init+0x27c>)
 8000444:	430b      	orrs	r3, r1
 8000446:	60d3      	str	r3, [r2, #12]
            break;
 8000448:	e00c      	b.n	8000464 <GPIO_Init+0x148>
            GPIOA_PUPDR &= ~(0x03 << PIN_NO);
 800044a:	4b53      	ldr	r3, [pc, #332]	; (8000598 <GPIO_Init+0x27c>)
 800044c:	68db      	ldr	r3, [r3, #12]
 800044e:	2103      	movs	r1, #3
 8000450:	68ba      	ldr	r2, [r7, #8]
 8000452:	fa01 f202 	lsl.w	r2, r1, r2
 8000456:	43d2      	mvns	r2, r2
 8000458:	4611      	mov	r1, r2
 800045a:	4a4f      	ldr	r2, [pc, #316]	; (8000598 <GPIO_Init+0x27c>)
 800045c:	400b      	ands	r3, r1
 800045e:	60d3      	str	r3, [r2, #12]
            break;
 8000460:	e000      	b.n	8000464 <GPIO_Init+0x148>
            break;
 8000462:	bf00      	nop
        break;
 8000464:	e08f      	b.n	8000586 <GPIO_Init+0x26a>
        RCC_AHB1ENR |= (0x01 << 1);
 8000466:	4b4b      	ldr	r3, [pc, #300]	; (8000594 <GPIO_Init+0x278>)
 8000468:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800046a:	4a4a      	ldr	r2, [pc, #296]	; (8000594 <GPIO_Init+0x278>)
 800046c:	f043 0302 	orr.w	r3, r3, #2
 8000470:	6313      	str	r3, [r2, #48]	; 0x30
 8000472:	687b      	ldr	r3, [r7, #4]
 8000474:	2b03      	cmp	r3, #3
 8000476:	d83c      	bhi.n	80004f2 <GPIO_Init+0x1d6>
 8000478:	a201      	add	r2, pc, #4	; (adr r2, 8000480 <GPIO_Init+0x164>)
 800047a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800047e:	bf00      	nop
 8000480:	08000491 	.word	0x08000491
 8000484:	080004ab 	.word	0x080004ab
 8000488:	080004c3 	.word	0x080004c3
 800048c:	080004db 	.word	0x080004db
            GPIOB_MODER &= ~(0x03 << 2 * PIN_NO);
 8000490:	4b42      	ldr	r3, [pc, #264]	; (800059c <GPIO_Init+0x280>)
 8000492:	681b      	ldr	r3, [r3, #0]
 8000494:	68ba      	ldr	r2, [r7, #8]
 8000496:	0052      	lsls	r2, r2, #1
 8000498:	2103      	movs	r1, #3
 800049a:	fa01 f202 	lsl.w	r2, r1, r2
 800049e:	43d2      	mvns	r2, r2
 80004a0:	4611      	mov	r1, r2
 80004a2:	4a3e      	ldr	r2, [pc, #248]	; (800059c <GPIO_Init+0x280>)
 80004a4:	400b      	ands	r3, r1
 80004a6:	6013      	str	r3, [r2, #0]
            break;
 80004a8:	e023      	b.n	80004f2 <GPIO_Init+0x1d6>
            GPIOB_MODER |= (0x01 << 2 * PIN_NO);
 80004aa:	4b3c      	ldr	r3, [pc, #240]	; (800059c <GPIO_Init+0x280>)
 80004ac:	681b      	ldr	r3, [r3, #0]
 80004ae:	68ba      	ldr	r2, [r7, #8]
 80004b0:	0052      	lsls	r2, r2, #1
 80004b2:	2101      	movs	r1, #1
 80004b4:	fa01 f202 	lsl.w	r2, r1, r2
 80004b8:	4611      	mov	r1, r2
 80004ba:	4a38      	ldr	r2, [pc, #224]	; (800059c <GPIO_Init+0x280>)
 80004bc:	430b      	orrs	r3, r1
 80004be:	6013      	str	r3, [r2, #0]
            break;
 80004c0:	e017      	b.n	80004f2 <GPIO_Init+0x1d6>
            GPIOB_MODER |= (0x02 << 2 * PIN_NO);
 80004c2:	4b36      	ldr	r3, [pc, #216]	; (800059c <GPIO_Init+0x280>)
 80004c4:	681b      	ldr	r3, [r3, #0]
 80004c6:	68ba      	ldr	r2, [r7, #8]
 80004c8:	0052      	lsls	r2, r2, #1
 80004ca:	2102      	movs	r1, #2
 80004cc:	fa01 f202 	lsl.w	r2, r1, r2
 80004d0:	4611      	mov	r1, r2
 80004d2:	4a32      	ldr	r2, [pc, #200]	; (800059c <GPIO_Init+0x280>)
 80004d4:	430b      	orrs	r3, r1
 80004d6:	6013      	str	r3, [r2, #0]
            break;
 80004d8:	e00b      	b.n	80004f2 <GPIO_Init+0x1d6>
            GPIOB_MODER |= (0x03 << 2 * PIN_NO);
 80004da:	4b30      	ldr	r3, [pc, #192]	; (800059c <GPIO_Init+0x280>)
 80004dc:	681b      	ldr	r3, [r3, #0]
 80004de:	68ba      	ldr	r2, [r7, #8]
 80004e0:	0052      	lsls	r2, r2, #1
 80004e2:	2103      	movs	r1, #3
 80004e4:	fa01 f202 	lsl.w	r2, r1, r2
 80004e8:	4611      	mov	r1, r2
 80004ea:	4a2c      	ldr	r2, [pc, #176]	; (800059c <GPIO_Init+0x280>)
 80004ec:	430b      	orrs	r3, r1
 80004ee:	6013      	str	r3, [r2, #0]
            break;
 80004f0:	bf00      	nop
 80004f2:	683b      	ldr	r3, [r7, #0]
 80004f4:	2b00      	cmp	r3, #0
 80004f6:	d003      	beq.n	8000500 <GPIO_Init+0x1e4>
 80004f8:	683b      	ldr	r3, [r7, #0]
 80004fa:	2b01      	cmp	r3, #1
 80004fc:	d00c      	beq.n	8000518 <GPIO_Init+0x1fc>
 80004fe:	e016      	b.n	800052e <GPIO_Init+0x212>
            GPIOB_OTYPER &= ~(0x01 << PIN_NO);
 8000500:	4b26      	ldr	r3, [pc, #152]	; (800059c <GPIO_Init+0x280>)
 8000502:	685b      	ldr	r3, [r3, #4]
 8000504:	2101      	movs	r1, #1
 8000506:	68ba      	ldr	r2, [r7, #8]
 8000508:	fa01 f202 	lsl.w	r2, r1, r2
 800050c:	43d2      	mvns	r2, r2
 800050e:	4611      	mov	r1, r2
 8000510:	4a22      	ldr	r2, [pc, #136]	; (800059c <GPIO_Init+0x280>)
 8000512:	400b      	ands	r3, r1
 8000514:	6053      	str	r3, [r2, #4]
            break;
 8000516:	e00a      	b.n	800052e <GPIO_Init+0x212>
            GPIOB_OTYPER |= (0x01 << PIN_NO);
 8000518:	4b20      	ldr	r3, [pc, #128]	; (800059c <GPIO_Init+0x280>)
 800051a:	685b      	ldr	r3, [r3, #4]
 800051c:	2101      	movs	r1, #1
 800051e:	68ba      	ldr	r2, [r7, #8]
 8000520:	fa01 f202 	lsl.w	r2, r1, r2
 8000524:	4611      	mov	r1, r2
 8000526:	4a1d      	ldr	r2, [pc, #116]	; (800059c <GPIO_Init+0x280>)
 8000528:	430b      	orrs	r3, r1
 800052a:	6053      	str	r3, [r2, #4]
            break;
 800052c:	bf00      	nop
        switch (RES_State = 0)
 800052e:	2300      	movs	r3, #0
 8000530:	61bb      	str	r3, [r7, #24]
 8000532:	69bb      	ldr	r3, [r7, #24]
 8000534:	2b01      	cmp	r3, #1
 8000536:	d003      	beq.n	8000540 <GPIO_Init+0x224>
 8000538:	69bb      	ldr	r3, [r7, #24]
 800053a:	2b02      	cmp	r3, #2
 800053c:	d00b      	beq.n	8000556 <GPIO_Init+0x23a>
 800053e:	e015      	b.n	800056c <GPIO_Init+0x250>
            GPIOB_PUPDR |= (0x01 << PIN_NO);
 8000540:	4b16      	ldr	r3, [pc, #88]	; (800059c <GPIO_Init+0x280>)
 8000542:	68db      	ldr	r3, [r3, #12]
 8000544:	2101      	movs	r1, #1
 8000546:	68ba      	ldr	r2, [r7, #8]
 8000548:	fa01 f202 	lsl.w	r2, r1, r2
 800054c:	4611      	mov	r1, r2
 800054e:	4a13      	ldr	r2, [pc, #76]	; (800059c <GPIO_Init+0x280>)
 8000550:	430b      	orrs	r3, r1
 8000552:	60d3      	str	r3, [r2, #12]
            break;
 8000554:	e016      	b.n	8000584 <GPIO_Init+0x268>
            GPIOB_PUPDR |= (0x02 << PIN_NO);
 8000556:	4b11      	ldr	r3, [pc, #68]	; (800059c <GPIO_Init+0x280>)
 8000558:	68db      	ldr	r3, [r3, #12]
 800055a:	2102      	movs	r1, #2
 800055c:	68ba      	ldr	r2, [r7, #8]
 800055e:	fa01 f202 	lsl.w	r2, r1, r2
 8000562:	4611      	mov	r1, r2
 8000564:	4a0d      	ldr	r2, [pc, #52]	; (800059c <GPIO_Init+0x280>)
 8000566:	430b      	orrs	r3, r1
 8000568:	60d3      	str	r3, [r2, #12]
            break;
 800056a:	e00b      	b.n	8000584 <GPIO_Init+0x268>
            GPIOB_PUPDR &= ~(0x01 << PIN_NO);
 800056c:	4b0b      	ldr	r3, [pc, #44]	; (800059c <GPIO_Init+0x280>)
 800056e:	68db      	ldr	r3, [r3, #12]
 8000570:	2101      	movs	r1, #1
 8000572:	68ba      	ldr	r2, [r7, #8]
 8000574:	fa01 f202 	lsl.w	r2, r1, r2
 8000578:	43d2      	mvns	r2, r2
 800057a:	4611      	mov	r1, r2
 800057c:	4a07      	ldr	r2, [pc, #28]	; (800059c <GPIO_Init+0x280>)
 800057e:	400b      	ands	r3, r1
 8000580:	60d3      	str	r3, [r2, #12]
            break;
 8000582:	bf00      	nop
        break;
 8000584:	bf00      	nop
}
 8000586:	bf00      	nop
 8000588:	3714      	adds	r7, #20
 800058a:	46bd      	mov	sp, r7
 800058c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000590:	4770      	bx	lr
 8000592:	bf00      	nop
 8000594:	40023800 	.word	0x40023800
 8000598:	40020000 	.word	0x40020000
 800059c:	40020400 	.word	0x40020400

080005a0 <GPIO_WritePin>:

unsigned char GPIO_WritePin(char Port, unsigned int PIN_NO, unsigned int Data)
{
 80005a0:	b480      	push	{r7}
 80005a2:	b087      	sub	sp, #28
 80005a4:	af00      	add	r7, sp, #0
 80005a6:	4603      	mov	r3, r0
 80005a8:	60b9      	str	r1, [r7, #8]
 80005aa:	607a      	str	r2, [r7, #4]
 80005ac:	73fb      	strb	r3, [r7, #15]
    unsigned char result;
    switch (Port)
 80005ae:	7bfb      	ldrb	r3, [r7, #15]
 80005b0:	2b41      	cmp	r3, #65	; 0x41
 80005b2:	d002      	beq.n	80005ba <GPIO_WritePin+0x1a>
 80005b4:	2b42      	cmp	r3, #66	; 0x42
 80005b6:	d02c      	beq.n	8000612 <GPIO_WritePin+0x72>
 80005b8:	e057      	b.n	800066a <GPIO_WritePin+0xca>
    {
    case ('A'):
        if ((GPIOA_MODER & (0x03 << 2 * PIN_NO)) >> (2 * PIN_NO) == 1)
 80005ba:	4b2f      	ldr	r3, [pc, #188]	; (8000678 <GPIO_WritePin+0xd8>)
 80005bc:	681b      	ldr	r3, [r3, #0]
 80005be:	68ba      	ldr	r2, [r7, #8]
 80005c0:	0052      	lsls	r2, r2, #1
 80005c2:	2103      	movs	r1, #3
 80005c4:	fa01 f202 	lsl.w	r2, r1, r2
 80005c8:	401a      	ands	r2, r3
 80005ca:	68bb      	ldr	r3, [r7, #8]
 80005cc:	005b      	lsls	r3, r3, #1
 80005ce:	fa22 f303 	lsr.w	r3, r2, r3
 80005d2:	2b01      	cmp	r3, #1
 80005d4:	d11a      	bne.n	800060c <GPIO_WritePin+0x6c>
        {
            if (Data)
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	2b00      	cmp	r3, #0
 80005da:	d009      	beq.n	80005f0 <GPIO_WritePin+0x50>
            {
                GPIOA_ODR |= (Data << PIN_NO);
 80005dc:	4b26      	ldr	r3, [pc, #152]	; (8000678 <GPIO_WritePin+0xd8>)
 80005de:	695a      	ldr	r2, [r3, #20]
 80005e0:	6879      	ldr	r1, [r7, #4]
 80005e2:	68bb      	ldr	r3, [r7, #8]
 80005e4:	fa01 f303 	lsl.w	r3, r1, r3
 80005e8:	4923      	ldr	r1, [pc, #140]	; (8000678 <GPIO_WritePin+0xd8>)
 80005ea:	4313      	orrs	r3, r2
 80005ec:	614b      	str	r3, [r1, #20]
 80005ee:	e00a      	b.n	8000606 <GPIO_WritePin+0x66>
            }
            else
            {
                GPIOA_ODR &= ~(1 << PIN_NO);
 80005f0:	4b21      	ldr	r3, [pc, #132]	; (8000678 <GPIO_WritePin+0xd8>)
 80005f2:	695b      	ldr	r3, [r3, #20]
 80005f4:	2101      	movs	r1, #1
 80005f6:	68ba      	ldr	r2, [r7, #8]
 80005f8:	fa01 f202 	lsl.w	r2, r1, r2
 80005fc:	43d2      	mvns	r2, r2
 80005fe:	4611      	mov	r1, r2
 8000600:	4a1d      	ldr	r2, [pc, #116]	; (8000678 <GPIO_WritePin+0xd8>)
 8000602:	400b      	ands	r3, r1
 8000604:	6153      	str	r3, [r2, #20]
            }
            result = OK;
 8000606:	2300      	movs	r3, #0
 8000608:	75fb      	strb	r3, [r7, #23]
        }
        else
        {
            result = NOK;
        }
        break;
 800060a:	e02e      	b.n	800066a <GPIO_WritePin+0xca>
            result = NOK;
 800060c:	2301      	movs	r3, #1
 800060e:	75fb      	strb	r3, [r7, #23]
        break;
 8000610:	e02b      	b.n	800066a <GPIO_WritePin+0xca>
    case ('B'):
        if ((GPIOB_MODER & (0x03 << 2 * PIN_NO)) >> (2 * PIN_NO) == 1)
 8000612:	4b1a      	ldr	r3, [pc, #104]	; (800067c <GPIO_WritePin+0xdc>)
 8000614:	681b      	ldr	r3, [r3, #0]
 8000616:	68ba      	ldr	r2, [r7, #8]
 8000618:	0052      	lsls	r2, r2, #1
 800061a:	2103      	movs	r1, #3
 800061c:	fa01 f202 	lsl.w	r2, r1, r2
 8000620:	401a      	ands	r2, r3
 8000622:	68bb      	ldr	r3, [r7, #8]
 8000624:	005b      	lsls	r3, r3, #1
 8000626:	fa22 f303 	lsr.w	r3, r2, r3
 800062a:	2b01      	cmp	r3, #1
 800062c:	d11a      	bne.n	8000664 <GPIO_WritePin+0xc4>
        {
            if (Data)
 800062e:	687b      	ldr	r3, [r7, #4]
 8000630:	2b00      	cmp	r3, #0
 8000632:	d009      	beq.n	8000648 <GPIO_WritePin+0xa8>
            {
                GPIOB_ODR |= (Data << PIN_NO);
 8000634:	4b11      	ldr	r3, [pc, #68]	; (800067c <GPIO_WritePin+0xdc>)
 8000636:	695a      	ldr	r2, [r3, #20]
 8000638:	6879      	ldr	r1, [r7, #4]
 800063a:	68bb      	ldr	r3, [r7, #8]
 800063c:	fa01 f303 	lsl.w	r3, r1, r3
 8000640:	490e      	ldr	r1, [pc, #56]	; (800067c <GPIO_WritePin+0xdc>)
 8000642:	4313      	orrs	r3, r2
 8000644:	614b      	str	r3, [r1, #20]
 8000646:	e00a      	b.n	800065e <GPIO_WritePin+0xbe>
            }
            else
            {
                GPIOB_ODR &= ~(1 << PIN_NO);
 8000648:	4b0c      	ldr	r3, [pc, #48]	; (800067c <GPIO_WritePin+0xdc>)
 800064a:	695b      	ldr	r3, [r3, #20]
 800064c:	2101      	movs	r1, #1
 800064e:	68ba      	ldr	r2, [r7, #8]
 8000650:	fa01 f202 	lsl.w	r2, r1, r2
 8000654:	43d2      	mvns	r2, r2
 8000656:	4611      	mov	r1, r2
 8000658:	4a08      	ldr	r2, [pc, #32]	; (800067c <GPIO_WritePin+0xdc>)
 800065a:	400b      	ands	r3, r1
 800065c:	6153      	str	r3, [r2, #20]
            }
            result = OK;
 800065e:	2300      	movs	r3, #0
 8000660:	75fb      	strb	r3, [r7, #23]
        else
        {
            result = NOK;
        }

        break;
 8000662:	e001      	b.n	8000668 <GPIO_WritePin+0xc8>
            result = NOK;
 8000664:	2301      	movs	r3, #1
 8000666:	75fb      	strb	r3, [r7, #23]
        break;
 8000668:	bf00      	nop

    } // end switch

    return result;
 800066a:	7dfb      	ldrb	r3, [r7, #23]
}
 800066c:	4618      	mov	r0, r3
 800066e:	371c      	adds	r7, #28
 8000670:	46bd      	mov	sp, r7
 8000672:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000676:	4770      	bx	lr
 8000678:	40020000 	.word	0x40020000
 800067c:	40020400 	.word	0x40020400

08000680 <GPIO_ReadPin>:

unsigned char GPIO_ReadPin(char Port, unsigned int PIN_NO)
{
 8000680:	b480      	push	{r7}
 8000682:	b085      	sub	sp, #20
 8000684:	af00      	add	r7, sp, #0
 8000686:	4603      	mov	r3, r0
 8000688:	6039      	str	r1, [r7, #0]
 800068a:	71fb      	strb	r3, [r7, #7]
    unsigned char value;
    switch (Port)
 800068c:	79fb      	ldrb	r3, [r7, #7]
 800068e:	2b41      	cmp	r3, #65	; 0x41
 8000690:	d002      	beq.n	8000698 <GPIO_ReadPin+0x18>
 8000692:	2b42      	cmp	r3, #66	; 0x42
 8000694:	d00d      	beq.n	80006b2 <GPIO_ReadPin+0x32>
 8000696:	e019      	b.n	80006cc <GPIO_ReadPin+0x4c>
    {
    case ('A'):
        if ((GPIOA_MODER & (0x00 << 2 * PIN_NO)) >> (2 * PIN_NO) == 0)
 8000698:	4b0f      	ldr	r3, [pc, #60]	; (80006d8 <GPIO_ReadPin+0x58>)
 800069a:	681b      	ldr	r3, [r3, #0]
        {
            value = (GPIOA_IDR >> PIN_NO) & 0x01;
 800069c:	4b0e      	ldr	r3, [pc, #56]	; (80006d8 <GPIO_ReadPin+0x58>)
 800069e:	691a      	ldr	r2, [r3, #16]
 80006a0:	683b      	ldr	r3, [r7, #0]
 80006a2:	fa22 f303 	lsr.w	r3, r2, r3
 80006a6:	b2db      	uxtb	r3, r3
 80006a8:	f003 0301 	and.w	r3, r3, #1
 80006ac:	73fb      	strb	r3, [r7, #15]
            return value;
 80006ae:	7bfb      	ldrb	r3, [r7, #15]
 80006b0:	e00c      	b.n	80006cc <GPIO_ReadPin+0x4c>
        }
        break;

    case ('B'):
        if ((GPIOB_MODER & (0x00 << 2 * PIN_NO)) >> (2 * PIN_NO) == 0)
 80006b2:	4b0a      	ldr	r3, [pc, #40]	; (80006dc <GPIO_ReadPin+0x5c>)
 80006b4:	681b      	ldr	r3, [r3, #0]
        {
            value = (GPIOB_IDR >> PIN_NO) & 0x01;
 80006b6:	4b09      	ldr	r3, [pc, #36]	; (80006dc <GPIO_ReadPin+0x5c>)
 80006b8:	691a      	ldr	r2, [r3, #16]
 80006ba:	683b      	ldr	r3, [r7, #0]
 80006bc:	fa22 f303 	lsr.w	r3, r2, r3
 80006c0:	b2db      	uxtb	r3, r3
 80006c2:	f003 0301 	and.w	r3, r3, #1
 80006c6:	73fb      	strb	r3, [r7, #15]
            return value;
 80006c8:	7bfb      	ldrb	r3, [r7, #15]
 80006ca:	e7ff      	b.n	80006cc <GPIO_ReadPin+0x4c>
        }
        break;

    } // end switch
}
 80006cc:	4618      	mov	r0, r3
 80006ce:	3714      	adds	r7, #20
 80006d0:	46bd      	mov	sp, r7
 80006d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006d6:	4770      	bx	lr
 80006d8:	40020000 	.word	0x40020000
 80006dc:	40020400 	.word	0x40020400

080006e0 <__libc_init_array>:
 80006e0:	b570      	push	{r4, r5, r6, lr}
 80006e2:	4d0d      	ldr	r5, [pc, #52]	; (8000718 <__libc_init_array+0x38>)
 80006e4:	4c0d      	ldr	r4, [pc, #52]	; (800071c <__libc_init_array+0x3c>)
 80006e6:	1b64      	subs	r4, r4, r5
 80006e8:	10a4      	asrs	r4, r4, #2
 80006ea:	2600      	movs	r6, #0
 80006ec:	42a6      	cmp	r6, r4
 80006ee:	d109      	bne.n	8000704 <__libc_init_array+0x24>
 80006f0:	4d0b      	ldr	r5, [pc, #44]	; (8000720 <__libc_init_array+0x40>)
 80006f2:	4c0c      	ldr	r4, [pc, #48]	; (8000724 <__libc_init_array+0x44>)
 80006f4:	f000 f818 	bl	8000728 <_init>
 80006f8:	1b64      	subs	r4, r4, r5
 80006fa:	10a4      	asrs	r4, r4, #2
 80006fc:	2600      	movs	r6, #0
 80006fe:	42a6      	cmp	r6, r4
 8000700:	d105      	bne.n	800070e <__libc_init_array+0x2e>
 8000702:	bd70      	pop	{r4, r5, r6, pc}
 8000704:	f855 3b04 	ldr.w	r3, [r5], #4
 8000708:	4798      	blx	r3
 800070a:	3601      	adds	r6, #1
 800070c:	e7ee      	b.n	80006ec <__libc_init_array+0xc>
 800070e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000712:	4798      	blx	r3
 8000714:	3601      	adds	r6, #1
 8000716:	e7f2      	b.n	80006fe <__libc_init_array+0x1e>
 8000718:	08000740 	.word	0x08000740
 800071c:	08000740 	.word	0x08000740
 8000720:	08000740 	.word	0x08000740
 8000724:	08000744 	.word	0x08000744

08000728 <_init>:
 8000728:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800072a:	bf00      	nop
 800072c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800072e:	bc08      	pop	{r3}
 8000730:	469e      	mov	lr, r3
 8000732:	4770      	bx	lr

08000734 <_fini>:
 8000734:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000736:	bf00      	nop
 8000738:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800073a:	bc08      	pop	{r3}
 800073c:	469e      	mov	lr, r3
 800073e:	4770      	bx	lr
